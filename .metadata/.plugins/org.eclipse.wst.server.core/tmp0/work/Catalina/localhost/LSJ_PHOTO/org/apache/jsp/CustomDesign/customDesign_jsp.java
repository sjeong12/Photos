/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.39
 * Generated at: 2016-12-10 10:55:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.CustomDesign;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class customDesign_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("utf-8"); 
      out.write("\r\n");
      out.write("<HTML><HEAD>\r\n");
      out.write("<TITLE>내 디자인</TITLE></HEAD>\r\n");
      out.write("\r\n");
      out.write("<script language=javascript>\r\n");
      out.write("function add_design()\r\n");
      out.write("{\r\n");
      out.write("\tdocument.frm_addD.action = \"/LSJ_PHOTO/home.jsp?page=/CustomDesign/addDesign\";\r\n");
      out.write("\tdocument.frm_addD.submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");

String code= request.getParameter("pcode");
String ID = (String)session.getAttribute("G_MEMID");
   if (ID == null)
   {
	   out.println("<script language=javascript>");
	   out.println("alert('로그인 후 이용해주세요');");
	   //out.println("location.href='home.jsp';");
	   out.println("location.href='/LSJ_PHOTO/home.jsp?page=/ch09/member_login';");
	   out.println("</script>");
   }
   

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<BODY>\r\n");
      out.write("\r\n");

    //String in_usernm = request.getParameter("search_value");
    //if (in_usernm == null) in_usernm = "";
    
    
    String in_search_key   = request.getParameter("search_key");
	String in_search_value = request.getParameter("search_value");
    //  페이지 번호 – 없으면(처음) 1, 아니면 전달 받은 페이지                                                                                             
    String strPageNum = request.getParameter("PageNum");     // paging
    // 표시할 목록의 개수 – 없으면 지정하여 사용 
  	String strPageSize = request.getParameter("PageSize");   // paging
  	if (in_search_key   == null) in_search_key   = "";
 	if (in_search_value == null) in_search_value = "";
    if (strPageNum == null) strPageNum = "1";        // paging  
    if (strPageSize == null) strPageSize = "5";      // paging    이 크기는 화면 사이즈에 따라 다름
    int currentPage = Integer.parseInt(strPageNum);  // paging  현재 선택 페이지 값 INT 로 변경
    int pageSize = Integer.parseInt(strPageSize);     // paging    목록의 갯수 INT로 변경

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<FORM NAME = frm_addD  ACTION=\"/LSJ_PHOTO/home.jsp?page=/CustomDesign/addDesign\" METHOD=post>\r\n");
      out.write("<TABLE border = \"0\" cellspacing = \"0\" cellpadding = \"2\" width = \"600\">\r\n");
      out.write("<TR><TD WIDTH = \"100%\" ALIGN = \"center\" valign=\"bottom\" height=\"100\"COLSPAN = \"4\">\r\n");
      out.write("<img src=\"homepageImage/MyPage/customDtitle.png\" height=\"60\" border=\"0\"/></TD></TR> \r\n");
      out.write("<TR><TD WIDTH = \"100%\" ALIGN = \"center\" valign=\"top\" height=\"50\" COLSPAN = \"4\">\r\n");
      out.write("<INPUT TYPE = \"button\" VALUE = \"디자인 추가\" onclick=\"add_design()\"></TD></TR>      \r\n");
      out.write("\r\n");

Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
String connectionURL = "jdbc:sqlserver://localhost:1433;databaseName=DBPstudio;user=sa;password=11";
Connection con = DriverManager.getConnection(connectionURL);
PreparedStatement pstmt = null;
ResultSet rs = null;		// 데이터 베이스에서 가져온 정보를 저장하는 객체 
ResultSet rs2 = null;      // paging    rs 객체 하나 더 생성 
ResultSet rso = null;      // option


     
	 String SQL = "SELECT * from CustomDesign where UserID = ? ";
     SQL = SQL + "order by D_NAME ";
     
     pstmt = con.prepareStatement(SQL);
 	 pstmt.setString(1, ID);
 	 rs = pstmt.executeQuery();
	
     // 페이징을 이용하기 위한 MSSQL 함수로 페이지를 계산한다.
     String SQL2 = SQL;                             //  위의 기존 SQL 에 더 추가       // paging 
     SQL2 = SQL2 + "OFFSET "+ ( currentPage - 1 ) * pageSize + " ROWS ";   // paging 
     SQL2 = SQL2 + "FETCH NEXT " + pageSize + " ROWS ONLY ";                // paging                     
       // 전체 카운트를 가져오기위한 sql을 실행해야한다.
      rs2 = pstmt.executeQuery();   // select 문                             //paging
      int totalRecords = 0;                                                             //paging
      while(rs2.next()){       // 처음부터 끝까지                                  //paging
      totalRecords++;       // 전체 레코드 수 카운트                             //paging
      }


   // 페이지가 계산된 목록을 가져오는 SQL2를 실행한다.
   	  pstmt = con.prepareStatement(SQL2);
 	  pstmt.setString(1, ID);
 	  rs = pstmt.executeQuery();	//  SQL2=기존 SQL + 페이징 SQL      // paging

 			  


 	  
   while(rs.next())    
   {
	    int d_num= rs.getInt("D_NUM");
	    int category= rs.getInt("D_CA");
		String d_name= rs.getString("D_NAME");
		String cname="";
		
		if(category == 1) cname="액자";
		else if(category == 2) cname="앨범";
		else if(category == 3) cname="디자인 소품";
       
   		
      out.write("\r\n");
      out.write("  \t \t<TR bgcolor = \"EAEAEA\">\r\n");
      out.write("  \t \t<TD WIDTH = \"100%\" ALIGN = \"left\" COLSPAN = \"4\"><font size = 2>카테고리 : ");
      out.print(cname );
      out.write("</font></TD></TR>\r\n");
      out.write("\t\t<TR bgcolor = \"EAEAEA\">\r\n");
      out.write("\t\t<TD WIDTH = \"100%\" ALIGN = \"left\" COLSPAN = \"2\"><font size = 2>디자인 이름 : ");
      out.print(d_name );
      out.write("</font></TD>\r\n");
      out.write("\t\t<TD WIDTH = \"100%\" ALIGN = \"right\" COLSPAN = \"2\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

			if(code== null)
			{
				
      out.write("<a href=\"/LSJ_PHOTO/home.jsp\">\r\n");
      out.write("\t\t\t\t<img src=\"homepageImage/addo.png\" border=\"0\"/></a>");

			}
			else
			{
				
      out.write("<a href=\"/LSJ_PHOTO/CustomDesign/addOption_ok.jsp?&category=");
      out.print(category);
      out.write("&dnum=");
      out.print(d_num);
      out.write("&pcode=");
      out.print(code);
      out.write("\">\r\n");
      out.write("\t\t\t\t<img src=\"homepageImage/addo.png\" border=\"0\"/></a>");

			}
		
		
		String SQL_O="SELECT P.Product_Name, P.SubCategory_Num, P.Product_Price, P.Product_Image ";
		SQL_O = SQL_O +"FROM Design_Option D, Product P where D.D_NUM = ? and D.Product_Code=P.Product_Code ";
		pstmt = con.prepareStatement(SQL_O);
		pstmt.setInt(1, d_num);
  		rso = pstmt.executeQuery();

  		
  			int check = 0, option_check = 0, allPrice=0;
  			while(rso.next())
  			{
  				option_check++;
  				int sub_category= rso.getInt("SubCategory_Num");
  				String p_name= rso.getString("Product_Name");
  				String p_image= rso.getString("Product_Image");
  				int p_price= rso.getInt("Product_Price");
  		        allPrice += p_price;
  		        String s_category = "";
  		        
  		        switch(sub_category){
  		        	case 1 : s_category="프레임"; break;
  		        	case 2 : s_category="용지"; break;
  		        	case 3 : s_category="커버"; break;
  		        	case 4 : s_category="용지"; break;
  		        	case 5 : s_category="쿠션"; break;
  		        	case 6 : s_category="머그컵"; break;
  		        	case 7 : s_category="액세서리"; break;
  		        }
		
      out.write("\r\n");
      out.write("\t\t\t</TD>\r\n");
      out.write("\t\t\t</TR>\r\n");
      out.write("\t\t\t<TR>\r\n");
      out.write("\t\t\t<TD COLSPAN = \"4\">\r\n");
      out.write("\t\t\t\t<Table width = \"600\">\r\n");
      out.write("   \t \t\t\t<TR bgcolor = \"F6F6F6\">\r\n");
      out.write("   \t\t\t\t<TD><font size = 2><center>");
      out.print(s_category);
      out.write("</center></font></TD>   \r\n");
      out.write("   \t\t\t\t<TD width=\"25%\"><font size = 2><center><img src=\"/LSJ_PHOTO/productImage/");
      out.print(p_image);
      out.write("\" height=\"50\"/></center></font></TH>      \r\n");
      out.write("  \t\t\t\t<TD width=\"40%\"><font size = 2><center>");
      out.print(p_name);
      out.write("</center></font></TD>      \r\n");
      out.write("  \t\t\t\t<TD width=\"20%\"><font size = 2><center>");
      out.print(p_price);
      out.write("원</center></font></TD>      \r\n");
      out.write("\t\t\t\t</TR> \r\n");
      out.write("\t\t\t\t</Table>\r\n");
      out.write("\t\t\t</TD>\r\n");
      out.write("\t\t\t</TR>\r\n");
      out.write("   \t\t");

   		
 	  			if(category== 1)
				{
					if(option_check==2) check=1;
				}
				else if(category==2)
				{
					if(option_check==2) check=1;
				}
				else if(category==3){
					if(option_check==1) check=1;
				}
  			
  				
  			}
  			
  	  		
      out.write("\r\n");
      out.write("\t\t\t\t<TR>\r\n");
      out.write("\t\t\t\t<TD COLSPAN = \"2\" ALIGN = \"left\" valign=\"top\" height=\"50\">\r\n");
      out.write("\t\t\t\t<a href=\"/LSJ_PHOTO/home.jsp?page=/Order/orderWrite&d_num=");
      out.print(d_num);
      out.write("&check=");
      out.print(check);
      out.write("&all=");
      out.print(allPrice);
      out.write("\">\r\n");
      out.write("\t\t\t\t<img src=\"homepageImage/orderBtn.png\" border=\"0\"/></a></TD>\r\n");
      out.write("\t\t\t\t<TD COLSPAN = \"2\" ALIGN = \"right\" valign=\"top\" height=\"50\">\r\n");
      out.write("\t\t\t\t<font size = 2>총 가격 : ");
      out.print(allPrice );
      out.write("</font>\r\n");
      out.write("\t\t\t\t</TD>\r\n");
      out.write("\t\t\t\t</TR>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t");
 

   }
   
      out.write("\r\n");
      out.write("   \r\n");
      out.write("</TABLE>\r\n");
      out.write("</FORM>\r\n");
      out.write("\r\n");

int intTotPages= 0; // 총 페이지 수 계산
int intR= totalRecords % pageSize;   // 6 % 3 = 0
if(intR == 0) {
intTotPages = totalRecords / pageSize;
}
else  {   // 7 % 3 != 0
intTotPages = totalRecords / pageSize + 1;  // 나머지가 0 아니면 총 페이지수는 몫 + 1
}

int intGrpSize  = 10; // 그룹 수 설정 - 화면에 보여질 그룹  수              
int currentGrp  = 0; // 현 그룹 No.
intR= currentPage % intGrpSize;     // 3 % 2 = ?
if(intR == 0) {                              
currentGrp= currentPage / intGrpSize;  //4/2=2 그룹
}
else  {   // 3/2 =1 +1 =2그룹
currentGrp= currentPage / intGrpSize + 1;  
}
//Page 282
int intGrpStartPage= (currentGrp  - 1) * intGrpSize + 1;   // 2그룹일 때 (2-1)*2+1=3
int intGrpEndPage=  currentGrp * intGrpSize;                  // 2그룹일 때  2*2=4
if (intGrpEndPage > intTotPages){    //  그룹의 끝 페이지가 총 페이지수보다 크면 
intGrpEndPage= intTotPages;           //  끝 페이지 수가 총 페이지 수 
}

if (currentGrp > 1){    //  그룹 2부터는 이전 페이지 표시

      out.write("\r\n");
      out.write(" [<A href=\"/LSJ_PHOTO/home.jsp?page=/CustomDesign/customDesign&PageNum=");
      out.print( intGrpStartPage - 1 );
      out.write("\">이전</A>]\r\n");
                                                               // 이전 이니까 -1
}

int intGrpPageCount= intGrpSize; // 그룹 당 페이지 수    
int intIndex= intGrpStartPage; // 현 그룹 시작 페이지
while (intGrpPageCount > 0 && intIndex <= intGrpEndPage){

      out.write("\r\n");
      out.write("[<A href=\"/LSJ_PHOTO/home.jsp?page=/CustomDesign/customDesign&PageNum=");
      out.print( intIndex );
      out.write('"');
      out.write('>');
      out.print( intIndex );
      out.write("</A>] &nbsp; \r\n");

intIndex = intIndex + 1;
intGrpPageCount  = intGrpPageCount - 1;
}
if (intIndex <= intTotPages){  // 다음 그룹이 있으면 

      out.write("\r\n");
      out.write("[<A href=\"/LSJ_PHOTO/home.jsp?page=/CustomDesign/customDesign&PageNum=");
      out.print( intIndex );
      out.write("\">다음</A>]\r\n");

}

pstmt.close();
rs.close();
rs2.close();
if(rso != null) rso.close();
con.close();


      out.write("\r\n");
      out.write("\r\n");
      out.write("</BODY>\r\n");
      out.write("\t\t\t\t");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
