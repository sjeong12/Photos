/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.39
 * Generated at: 2016-12-11 07:33:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class productView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/include/dbinfo.inc", Long.valueOf(1481076272000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("utf-8"); 
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\r\n");
      out.write("<HTML>\r\n");
      out.write(" <HEAD>\r\n");
      out.write("  <TITLE>파일 게시판 상세보기</TITLE>\r\n");
      out.write(" </HEAD>\r\n");
      out.write("\r\n");
      out.write("<script language=javascript>\r\n");
      out.write("function submit_delete()\r\n");
      out.write("{\r\n");
      out.write("\tdocument.fview.action = \"/LSJ_PHOTO/admin/productDelete_ok.jsp\";\r\n");
      out.write("\tdocument.fview.submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function submit_list()\r\n");
      out.write("{\r\n");
      out.write("\tdocument.fview.action = \"/LSJ_PHOTO/home.jsp?page=/admin/productList\";\r\n");
      out.write("\tdocument.fview.submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");

Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
String connectionURL = "jdbc:sqlserver://localhost:1433;databaseName=DBPstudio;user=sa;password=11";
Connection con = DriverManager.getConnection(connectionURL);

      out.write('\r');
      out.write('\n');
      out.write("\t\t\r\n");
      out.write("\r\n");

PreparedStatement pstmt = null;
ResultSet rs = null;

try
{
	//int num = Integer.parseInt(request.getParameter("pnum"));
	String code = request.getParameter("pcode");

	String strSQL = "SELECT * FROM Product WHERE Product_Code = ?";
	pstmt = con.prepareStatement(strSQL);
	pstmt.setString(1, code);
	rs = pstmt.executeQuery();

	if (rs.next() == false)
		out.print("등록된 상품이 없습니다");
	else
	{
		String name				= rs.getString("Product_Name");
		String price			= rs.getString("product_Price");
		String info		 		= rs.getString("Product_Info");
		String popular  		= rs.getString("Product_Popular");
		int amount				= rs.getInt("Product_Amount");
		int sub_category_num	= rs.getInt("SubCategory_Num");
		String image 			= rs.getString("Product_Image");
		
		String ext1     = null;
		if (image != null && !image.equals("")) {
			ext1 =  image.substring(image.indexOf(".") + 1);
		}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<BODY>\r\n");
      out.write("\t\t<TABLE WIDTH = \"600\" BORDER = \"1\" CellPadding = \"5\" CellSpacing = \"0\">\r\n");
      out.write("\t\t\t<TR>\r\n");
      out.write("\t\t\t\t<TD bgcolor = \"EAEAEA\" WIDTH = \"15%\" ALIGN = \"left\"><font size = 2>제품코드</font></TD>\r\n");
      out.write("\t\t\t\t<TD WIDTH = \"85%\" ALIGN = \"left\"><font size = 2>");
      out.print( code );
      out.write("</font></TD>\r\n");
      out.write("\t\t\t</TR>\r\n");
      out.write("\t\t\t<TR>\r\n");
      out.write("\t\t\t\t<TD bgcolor = \"EAEAEA\" WIDTH = \"15%\" ALIGN = \"left\"><font size = 2>제품명</font></TD>\r\n");
      out.write("\t\t\t\t<TD WIDTH = \"85%\" ALIGN = \"left\"><font size = 2>");
      out.print( name );
      out.write("</font></TD>\r\n");
      out.write("\t\t\t</TR>\r\n");
      out.write("\t\t\t<TR>\r\n");
      out.write("\t\t\t\t<TD bgcolor = \"EAEAEA\" WIDTH = \"15%\" ALIGN = \"left\"><font size = 2>개수</font></TD>\r\n");
      out.write("\t\t\t\t<TD WIDTH = \"85%\" ALIGN = \"left\"><font size = 2>");
      out.print( amount );
      out.write("</font></TD>\r\n");
      out.write("\t\t\t</TR>\r\n");
      out.write("\t\t\t<TR>\r\n");
      out.write("\t\t\t\t<TD bgcolor = \"EAEAEA\" WIDTH = \"15%\" ALIGN = \"left\"><font size = 2>인기도</font></TD>\r\n");
      out.write("\t\t\t\t<TD WIDTH = \"85%\" ALIGN = \"left\"><font size = 2>");
      out.print( popular );
      out.write("</font></TD>\r\n");
      out.write("\t\t\t</TR>\r\n");
      out.write("\t\t\t<TR>\r\n");
      out.write("\t\t\t\t<TD WIDTH = \"100%\" ALIGN = \"center\" colspan=\"2\">\r\n");

		if (image != null) {
			ext1 = ext1.toLowerCase();
		if (ext1.equals("jpg") || ext1.equals("bmp") || ext1.equals("gif") || ext1.equals("png"))
			out.print ("<IMG SRC='/LSJ_PHOTO/productImage/" + image +"' width=200 height=200>");
		else
			out.print ("<A HREF='boardDfiledown.jsp?pcode=" + code +"&ftype=1'><IMG SRC='./icon_file.gif'> " + image + "</A>");
		}


      out.write("\r\n");
      out.write("\t\t\t\t</TD>\r\n");
      out.write("\t\t\t</TR>\r\n");
      out.write("\t\t\t<TR>\r\n");
      out.write("\t\t\t\t<TD WIDTH = \"100%\" ALIGN = \"center\" colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t<TEXTAREA NAME=\"contents\" ROWS=5 COLS=60 disabled>");
      out.print( info );
      out.write("</TEXTAREA>\r\n");
      out.write("\t\t\t\t</TD>\r\n");
      out.write("\t\t\t</TR>\r\n");
      out.write("\t\t\t<TR>\r\n");
      out.write("\t\t\t\t<TD WIDTH = \"100%\" ALIGN = \"center\" COLSPAN = \"2\">\r\n");
      out.write("\t\t\t\t<FORM NAME = \"fview\" METHOD = \"post\">\r\n");
      out.write("\t\t\t\t<INPUT TYPE = \"hidden\" NAME = pcode VALUE = ");
      out.print( code );
      out.write(">\r\n");
      out.write("\t\t\t\t<TABLE>\r\n");
      out.write("\t\t\t\t\t<TR>\r\n");
      out.write("\t\t\t\t\t\t<TD WIDTH = \"33%\" ALIGN = \"center\">\r\n");
      out.write("\t\t\t\t\t\t\t<INPUT TYPE = \"button\" VALUE = \"삭제하기\" onclick = \"submit_delete()\">\r\n");
      out.write("\t\t\t\t\t\t</TD>\r\n");
      out.write("\t\t\t\t\t\t<TD WIDTH = \"*%\" ALIGN = \"center\">\r\n");
      out.write("\t\t\t\t\t\t\t<INPUT TYPE = \"button\" VALUE = \"목록으로\" onclick = \"submit_list()\">\r\n");
      out.write("\t\t\t\t\t\t</TD>\r\n");
      out.write("\t\t\t\t\t</TR>\r\n");
      out.write("\t\t\t\t</TABLE>\r\n");
      out.write("\t\t\t\t</FORM>\r\n");
      out.write("\t\t\t\t</TD>\r\n");
      out.write("\t\t\t</TR>\r\n");
      out.write("\t\t</TABLE>\r\n");
      out.write("\t\t</BODY>\r\n");

}
} //try end


catch(SQLException e1){
	out.println(e1.getMessage());
} // catch SQLException end

catch(Exception e2){
	e2.printStackTrace();
} // catch Exception end

finally{
	if (pstmt != null) pstmt.close();
	if (rs    != null) rs.close();
	if (con   != null) con.close();
} // finally end

      out.write("\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
