/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.39
 * Generated at: 2016-11-30 11:51:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch09;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.sql.*;

public final class counter_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("utf-8"); 
      out.write("\r\n");
      out.write("<html><body>\r\n");

Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
String connectionURL = "jdbc:sqlserver://localhost:1433;databaseName=lsj1531;user=sa;password=11";
Connection con = DriverManager.getConnection(connectionURL);
ResultSet rs = null;

Statement stmt = con.createStatement();

String COUNT_V= "Declare @Counter Int " +
"Select @Counter = Sum(HitCount) From Web_Counter " +
"Where " +
"HitYear = Year(GetDate()) And "+
"HitMonth = Month(GetDate()) And "+
"HitDay = Day(GetDate()) And "+
"HitHour = DatePart(hh, GetDate()) "+
"If @Counter Is NULL "+
"Insert Web_Counter Default Values "+
"Else "+
"Update Web_Counter "+
"Set "+
"HitCount = HitCount + 1 "+
"Where "+
"HitYear = Year(GetDate()) And "+
"HitMonth = Month(GetDate()) And "+
"HitDay = Day(GetDate()) And "+
"HitHour = DatePart(hh, GetDate()) ";

String TOTAL_V="Select Sum(HitCount) as SumOfCount From Web_Counter ";
String YEAR_V=TOTAL_V+" Where HitYear = Year(GetDate()) ";
String MONTH_V=YEAR_V+" And HitMonth = Month(GetDate())";
String TODAY_V=MONTH_V+" And HitDay = DatePart(dd, GetDate())";
String NOW_V=TODAY_V+" And HitHour = DatePart(hh, GetDate())";

if (session.isNew()) {
    stmt.executeUpdate(COUNT_V);   // 리턴값 없을 때
}


     int total =-1;
     int year = -1;
     int month = -1;
     int today = -1;
     int now = -1;
     
     rs = stmt.executeQuery(TOTAL_V);
     if(rs.next())    total= rs.getInt("SumOfCount");

     rs = stmt.executeQuery(YEAR_V);
     if(rs.next())    year= rs.getInt("SumOfCount");
     
     rs = stmt.executeQuery(MONTH_V);
     if(rs.next())    month= rs.getInt("SumOfCount");
     
     rs = stmt.executeQuery(TODAY_V);
     if(rs.next())    today= rs.getInt("SumOfCount");
     
     rs = stmt.executeQuery(NOW_V);
     if(rs.next())    now= rs.getInt("SumOfCount");


     stmt.close();
     rs.close();
     con.close();    

      out.write("\r\n");
      out.write("<TABLE WIDTH = \"130\" BORDER = \"1\" CellPadding = \"0\" CellSpacing = \"0\">\r\n");
      out.write("<TR><TD WIDTH = \"100%\" ALIGN = \"left\" >\r\n");
      out.write("<FONT size=\"2\">\r\n");
      out.write("총 방문자수 : ");
      out.print( total );
      out.write("명<br>\r\n");
      out.write("올해 방문자수 : ");
      out.print( year);
      out.write("명<br>\r\n");
      out.write("이달 방문자수 : ");
      out.print( month);
      out.write("명<br>\r\n");
      out.write("오늘 방문자수 : ");
      out.print( today);
      out.write("명<br>\r\n");
      out.write("현재 방문자수 : ");
      out.print( now );
      out.write("명\r\n");
      out.write("</FONT> \r\n");
      out.write("</TD></TR>\r\n");
      out.write("</TABLE>\r\n");
      out.write("\r\n");
      out.write("</body></html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
