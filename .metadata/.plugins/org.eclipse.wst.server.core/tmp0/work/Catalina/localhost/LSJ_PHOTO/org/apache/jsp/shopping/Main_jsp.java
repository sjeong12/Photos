/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.39
 * Generated at: 2016-11-30 08:39:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shopping;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import com.Database;

public final class Main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("com.Database");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./Style.css\" type=\"text/css\">\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"helloId\">\r\n");
      out.write("\t\t");
	// 세션 가져와서 이름 띄우기
			String name = session.getAttribute("userSession") + "";
		
      out.write("\r\n");
      out.write("\t\t<a href=\"Main.jsp\" style=\"float:left;\"> HOME </a>\r\n");
      out.write("\t\t<b> ");
      out.print(name);
      out.write("님 &nbsp; </b>\r\n");
      out.write("\r\n");
      out.write("\t\t");
 if(name.equals("admin")) { 
      out.write("\r\n");
      out.write("\t\t<a href=\"Page_admin.jsp\"> 관리자 </a> |\t");
} 
      out.write("\t\t\r\n");
      out.write("\t\t");
 if(name.equals("seller")) { 
      out.write("\r\n");
      out.write("\t\t<a href=\"Page_seller.jsp\"> 판매자 </a> |\t");
} 
      out.write("\t\r\n");
      out.write("\t\t<a href=\"_logout.jsp\"> 로그아웃 </a>\r\n");
      out.write("\t\t\r\n");
      out.write("\t<h1 id=\"title\"> WeMakethePrics </h1>\r\n");
      out.write("\t</div><br/>\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t");

		Database db = new Database();
		db.connection();
		String sql = "SELECT * FROM item";
		ResultSet resultSet = db.select(sql);
		
			while(resultSet.next()) {
				int code = resultSet.getInt("code");
				String item = resultSet.getString("item");
				String price = resultSet.getString("price");
			
      out.write("\r\n");
      out.write("\t\t\t<div class=\"box\">\r\n");
      out.write("\t\t\t\t<div class=\"image-box\">\r\n");
      out.write("\t\t\t\t\t<a href=\"Board.jsp?code=");
      out.print(code );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t<img src=\"_getImage.jsp?code=");
      out.print(code );
      out.write("\" width=\"300\" height=\"300\">\r\n");
      out.write("\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"box-underimage\">\r\n");
      out.write("\t\t<div class=\"box-itemname\">\r\n");
      out.write("\t\t\t ");
      out.print(item );
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\t\t <div class=\"box-itemprice\">\r\n");
      out.write("\t\t\t\t \t");
      out.print(price );
      out.write("원\r\n");
      out.write("\t\t\t\t </div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<form action=\"Cart.jsp\" class=\"content-box\">\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"code\" value=\"");
      out.print(code);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"item\" value=\"");
      out.print(item);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"price\" value=\"");
      out.print(price);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t<!-- 구매 <input type=\"checkbox\" name=\"checked\"> -->\r\n");
      out.write("\t\t\t\t\t수량 <select name=\"count\">\r\n");
      out.write("\t\t\t\t\t\t\t<option> 1 </option>\r\n");
      out.write("\t\t\t\t\t\t\t<option> 2 </option>\r\n");
      out.write("\t\t\t\t\t\t\t<option> 3 </option>\r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("<!-- \t\t\t\t\t<input type=\"submit\" value=\"구입하기\" onclick=\"form.action='Cart.jsp';\"> -->\r\n");
      out.write("\t\t\t\t\t<input class=\"btn_submit\" type=\"submit\" value=\"구매하기\">\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\t\t\r\n");
      out.write("\t\t\t");
	}
			db.connectionClose();	
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
